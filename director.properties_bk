####################################################################################################
#                                      WSPaymentService example                                      #
####################################################################################################
#
# This is a generic demonstration on how to provide a '/test/hello-service' webservice with FFC.
#
# You can test by:
#  a) running the provided make_hello_request.sh script which contains a CURL call with simple SOAP
#     envelope data.
#  b) accessing the endpoint through SoapUI (http://www.soapui.org/) and importing the provided
#     soapui-project.xml or creating a new SOAP project using the included HelloService.wsdl file.
#
#     You can then open the appropriate request in SoapUI and send it to the correct endpoint
#     defined in the properties below in the WSServerSource component.
#     e.g. https://127.0.0.1:8839/test/hello-service
#
# Notes:
# - HttpServerResource: communication is secured by basic authentication (username/password) as well
#   as SSL.
#
####################################################################################################
#
# ------ INCLUDE PROPERTIES
# Include properties files separated by comma. Usually contains JMS service properties and
# persistence properties (when both used).
#
include.files=\
	license.els.properties, \
        service.jms.properties, \
        persistence.mssql.properties

# ================== GENERAL PROPERTIES ==================
mch.default.instance.id=WSPaymentService 
mch.flow.diagram.file=WSPaymentService.gv

FLOW_DATA_DIR=%{DATA_DIR:data}

KNOWN_HOSTS_FILE=%{FLOW_DATA_DIR}/store/known_hosts
# VALIDATE_KNOWN_HOSTS should be set to 'yes' once the remote's fingerprint has been saved to the store
VALIDATE_KNOWN_HOSTS=no

# Define a list of files which should be created on startup
# (files will only be created if they do not already exist):
mch.create.file.list=\
      %{KNOWN_HOSTS_FILE}
#
# ensure import sub directories exist or are created on startup
# (make sure to create corresponding directories on the remote host!)
#
mch.create.directory.list=\
      %{FLOW_DATA_DIR}/import/SWIFT, \
      %{FLOW_DATA_DIR}/import/BIDV, \
      %{FLOW_DATA_DIR}/import/VCB, \
      %{FLOW_DATA_DIR}/import/VIETIN, \

# --------- LICENSE
#license.trial=true

# Configure groovy scripts directory
mch.groovy.scripts.dir=groovy

# ------ LOGGING PROPERTIES
log4j.configuration=log4j.properties

# in log4j.properties a ui.log file appender is defined to log WARN's and
# ERROR's -> active UI log service to tail this file so that the UI can show
# the log in the monitor/log tab. Limit the maximum number of lines read to 5000
# and make the instance delete the log on each startup (so that a clean log
# 'from start of instance run' is shown - alternatively set this to false to
# see the complete log and leave it to log4j to rotate the file)
service.ui.log.file=logs/ui.log
service.ui.log.max.lines=5000
service.ui.log.delete.on.startup=true

# ------ PERSISTENCE ENABLING
# Configure the persistence layer, this example is using H2 database for the persistent MCH message
# store.
#
# (after first run, set mch.persistence.enable=false to prevent losing your data on each MCH
# restart! It is a better habit to not set this property to 'true' in the config but to run
# mch.sh startup script with command line parameter -D mch.persistence.schema.create=true when
# you want to recreate the MCH schema)
#
mch.persistence.enable=true

# Drop and recreate the schema on each startup
#mch.persistence.schema.create=true

# Check schema on startup, create or upgrade as needed while preserving data
#mch.persistence.schema.update=true
queues.persist.all.full=true

# H2 (h2-1.3.176.jar for driver)
MCH_DB_HOST=mssql-server
MCH_DB_PORT=1433
MCH_DB_NAME=Kustom
MCH_DB_USER=kplus
MCH_DB_SCHEMA=Kustom
MCH_DB_PASSWORD=DHQpmIlvxLQCuEl+Vi7UXVX20OlijCbsAJQn5nfAsgEPI2y8j9Fs

#
# Kondor database connectivity for JDBCDestination
#
CITAD_DB_URL=jdbc:oracle:thin:@citadserver:1521:citad1
CITAD_DB_USER=dev_treasury
CITAD_DB_PASSWORD=DKFxNeAyr+hMqpoZlAblckWCWX/1HJ2WOy6QxR6FEN/DxH0OGd0Ix0Y=
CITAD_DB_DRIVER=oracle.jdbc.pool.OracleDataSource




# internal MCH service layer uses JMS over active MQ. Specify the activeMQ server
# port server and port number
# (note: if you did a default installation of activemq, your service port number will be set to
# 61616, consider choosing a port number < 32768 to prevent conflicts with dynamically allocated
# ports!)
JMS_SERVICE_HOST=localhost
JMS_SERVICE_PORT=14616

#
# JMS Source properties
#
JMS_SOURCE_URL=tcp://localhost:14616
JMS_SOURCE_CTX_FACTORY=org.apache.activemq.jndi.ActiveMQInitialContextFactory
JMS_SOURCE_CORRELATION_PREFIX=
JMS_SOURCE_CONNECTION_FACTORY=QueueConnectionFactory
JMS_SOURCE_INBOUND_QUEUE=caddRequestQueue
JMS_SOURCE_HEADERS=TransactionID,SourceSystem

#
# JMS Destination properties
#
JMS_DESTINATION_URL=tcp://localhost:14616
JMS_DESTINATION_CTX_FACTORY=org.apache.activemq.jndi.ActiveMQInitialContextFactory
JMS_DESTINATION_CORRELATION_PREFIX=
JMS_DESTINATION_CONNECTION_FACTORY=QueueConnectionFactory
JMS_DESTINATION_OUTBOUND_QUEUE=caddResponseQueue
JMS_DESTINATION_HEADERS=TransactionID,SourceSystem

#================================= PERSISTENT QUEUE CONFIGURATION ==================================/*
queues.list=PaymentServiceQueue, \
	    SwiftServiceQueue, \
		CitadServiceQueue, \
		CasaServiceQueue, \
		VcbServiceQueue, \
		BidvServiceQueue, \
		VietinServiceQueue, \
		sftpSwiftDestinationQueue, \
		sftpBidvDestinationQueue, \
		sftpVcbDestinationQueue, \
		sftpVietinDestinationQueue, \
        errorLogQueue, \
        wsPaymentSourceAckQueue, \
		SwiftMessageEventLogQueue, \
		BidvMessageEventLogQueue, \
		VcbMessageEventLogQueue, \
		VietinMessageEventLogQueue, \
		SwiftWriteMessageLogQueue, \
		BidvWriteMessageLogQueue, \
		VcbWriteMessageLogQueue, \
		VietinWriteMessageLogQueue
queues.persistent.list=PaymentServiceQueue, \
	   	SwiftServiceQueue, \
		CitadServiceQueue, \
		CasaServiceQueue, \
		VcbServiceQueue, \
		BidvServiceQueue, \
		VietinServiceQueue, \
	sftpSwiftDestinationQueue, \
	sftpBidvDestinationQueue, \
	sftpVcbDestinationQueue, \
	sftpVietinDestinationQueue, \
        errorLogQueue, \
        wsPaymentSourceAckQueue, \
		SwiftMessageEventLogQueue, \
		BidvMessageEventLogQueue, \
		VcbMessageEventLogQueue, \
		VietinMessageEventLogQueue, \
		SwiftWriteMessageLogQueue, \
		BidvWriteMessageLogQueue, \
		VcbWriteMessageLogQueue, \
		VietinWriteMessageLogQueue
#------ SOURCES LIST --------
source.list=\
        PaymentWsSource, \
		FilePollerSwiftSource, \
		FilePollerBidvSource, \
		FilePollerVcbSource, \
		FilePollerVietinSource,\
		SwiftMessageEventSource, \
		BidvMessageEventSource, \
		VcbMessageEventSource, \
		VietinMessageEventSource
#----- DESTINATIONs LIST -----
destination.list=SftpSwiftDestination, \
				SftpBidvDestination, \
				SftpVcbDestination, \
				SftpVietinDestination, \
                ErrorLog,\
				SiwftWriteMessageLog, \
				BidvWriteMessageLog, \
				VcbWriteMessageLog, \
				VietinWriteMessageLog
#------ PROCESSORS LIST --------
processor.list=\
		OperationRouterProcessor,\
        CITADProcessor,\
        CASAProcessor,\
        SWIFTProcessor,\
        VCBProcessor,\
        BIDVProcessor,\
        VIETINProcessor,\
		SwiftMessageEventLog, \
		BidvMessageEventLog, \
		VcbMessageEventLog, \
		VietinMessageEventLog
		
#----- APPLICATION CONFIG
# SWIFT config
SFTP_USERNAME=kplus
#SFTP_PASSWORD=Kondor_123
SFTP_PASSWORD=DADcuCULTTev5S3B10zZWx/ojNeWg0nQfbdwVDB1dCOdiqdGbVu7
# Replace below SFTP_REMOTE_PATH value with an existing remote directory path
SFTP_REMOTE_PATH=/data/kplus/home/PaymentFolder/swift
#SFTP_HOST=kondorsrv
SFTP_HOST=swiftserver
SFTP_PORT=22

#BIDV config
BFTP_USERNAME=treasury
#SFTP_PASSWORD=Kondor_123
BFTP_PASSWORD=DP9zsXJGUTwUIKAc+oOMlKwhWy/0GijuG+C2T1qQG46vQK8=
# Replace below SFTP_REMOTE_PATH value with an existing remote directory path
BFTP_REMOTE_PATH=/DienDi
#BFTP_HOST=kondorsrv
BFTP_HOST=bidvserver
BFTP_PORT=22  

#VCB config
VFTP_USERNAME=kplus
#SFTP_PASSWORD=Kondor_123
VFTP_PASSWORD=DADcuCULTTev5S3B10zZWx/ojNeWg0nQfbdwVDB1dCOdiqdGbVu7
# Replace below SFTP_REMOTE_PATH value with an existing remote directory path
VFTP_REMOTE_PATH=/data/kplus/home/PaymentFolder/vcb
#VFTP_HOST=kondorsrv
VFTP_HOST=vcbserver
VFTP_PORT=22  

#VIETIN config
VIFTP_USERNAME=treasury
#SFTP_PASSWORD=Kondor_123
VIFTP_PASSWORD=DP9zsXJGUTwUIKAc+oOMlKwhWy/0GijuG+C2T1qQG46vQK8=
# Replace below SFTP_REMOTE_PATH value with an existing remote directory path
VIFTP_REMOTE_PATH=/DienDi
#VIFTP_HOST=kondorsrv
VIFTP_HOST=vietinserver
VIFTP_PORT=22  

#CASA config
CASA_URL=http://iibserver:8144/Treasury?wsdl
CASA_SERVICECHANNEL=KONDOR
CASA_SERVICE=KONDOR
CASA_TRANSACTIONTYPE=ACIB

#====================================== RESOURCES DEFINITION =======================================
#
# WSDL Resource describes the request format (wsdl specification)
resource.WsdlResource.class=WsdlResource
resource.WsdlResource.filename=PaymentsWS.wsdl

#############
# RESOURCES #
#############
resource.PropertiesResource.class=PropertiesResource
resource.PropertiesResource.properties.dbURL=%{CITAD_DB_URL}
resource.PropertiesResource.properties.dbUsername=%{CITAD_DB_USER}
resource.PropertiesResource.properties.dbPassword=%{CITAD_DB_PASSWORD[DECRYPT]}
resource.PropertiesResource.properties.dbDriver=%{CITAD_DB_DRIVER}

resource.PropertiesResource.properties.casaUrl=%{CASA_URL}
resource.PropertiesResource.properties.casaServiceChannel=%{CASA_SERVICECHANNEL}
resource.PropertiesResource.properties.casaService=%{CASA_SERVICE}
resource.PropertiesResource.properties.casaTransactionType=%{CASA_TRANSACTIONTYPE}

# HTTP Server Resource for the "WSServerSource" FFC component described below
resource.HttpResource.class=HttpServerResource
resource.HttpResource.interface=127.0.0.1
resource.HttpResource.port=51086
resource.HttpResource.secure=false
resource.HttpResource.userName=
resource.HttpResource.userPassword=
resource.HttpResource.keyStorePath=keystore/server.keystore
resource.HttpResource.keyStorePassword=keyPass
resource.HttpResource.keyStoreManagerPassword=keyPass

#======================================== FLOW DEFINITION ==========================================
# PaymentWsSource to receive the request
source.PaymentWsSource.class=WSServerSource
source.PaymentWsSource.outgoing.queue1=PaymentServiceQueue
source.PaymentWsSource.outgoing.queue.error=errorLogQueue
source.PaymentWsSource.ack.queue=wsPaymentSourceAckQueue
source.PaymentWsSource.wsdlResource=WsdlResource
source.PaymentWsSource.httpResource=HttpResource
source.PaymentWsSource.message.static.property.inputType=REQUEST IN
source.PaymentWsSource.message.static.property.outputType=RESPONSE OUT
source.PaymentWsSource.indentXML=true
source.PaymentWsSource.validateRequest=true
source.PaymentWsSource.validateResponse=true
source.PaymentWsSource.endpoint=/ffc/PaymentsWS


#------ OperationRouterProcessor
#
processor.OperationRouterProcessor.class=MessageRouter
processor.OperationRouterProcessor.incoming.queue=PaymentServiceQueue
processor.OperationRouterProcessor.outgoing.queues.list=\
	SwiftServiceQueue, \
		CitadServiceQueue, \
		CasaServiceQueue, \
		VcbServiceQueue, \
		BidvServiceQueue, \
		VietinServiceQueue
processor.OperationRouterProcessor.router.properties=soap.operation
processor.OperationRouterProcessor.router.SWIFTMsgContent=SwiftServiceQueue
processor.OperationRouterProcessor.router.CITADMsgContent=CitadServiceQueue
processor.OperationRouterProcessor.router.CASAMsgContent=CasaServiceQueue
processor.OperationRouterProcessor.router.BIDVMsgContent=BidvServiceQueue
processor.OperationRouterProcessor.router.VCBMsgContent=VcbServiceQueue
processor.OperationRouterProcessor.router.VIETINMsgContent=VietinServiceQueue



#------ PROCESSOR: SWIFTService
processor.SWIFTProcessor.class=GProcessorRunner
processor.SWIFTProcessor.incoming.queue=SwiftServiceQueue
processor.SWIFTProcessor.outgoing.queue1=wsPaymentSourceAckQueue
processor.SWIFTProcessor.outgoing.queue.error=errorLogQueue
processor.SWIFTProcessor.scriptName=SWIFTService

#------ PROCESSOR: CITADProcessor
processor.CITADProcessor.class=GProcessorRunner
processor.CITADProcessor.incoming.queue=CitadServiceQueue
processor.CITADProcessor.outgoing.queue1=wsPaymentSourceAckQueue
processor.CITADProcessor.outgoing.queue.error=errorLogQueue
processor.CITADProcessor.scriptName=CITADService
processor.CITADProcessor.resources.propertiesResource=PropertiesResource

#------ PROCESSOR: CASAProcessor
processor.CASAProcessor.class=GProcessorRunner
processor.CASAProcessor.incoming.queue=CasaServiceQueue
processor.CASAProcessor.outgoing.queue1=wsPaymentSourceAckQueue
processor.CASAProcessor.outgoing.queue.error=errorLogQueue
processor.CASAProcessor.scriptName=CASAService
processor.CASAProcessor.resources.propertiesResource=PropertiesResource

#------ PROCESSOR: BIDVProcessor
processor.BIDVProcessor.class=GProcessorRunner
processor.BIDVProcessor.incoming.queue=BidvServiceQueue
processor.BIDVProcessor.outgoing.queue1=wsPaymentSourceAckQueue
processor.BIDVProcessor.outgoing.queue.error=errorLogQueue
processor.BIDVProcessor.scriptName=BIDVService

#------ PROCESSOR: VCBProcessor
processor.VCBProcessor.class=GProcessorRunner
processor.VCBProcessor.incoming.queue=VcbServiceQueue
processor.VCBProcessor.outgoing.queue1=wsPaymentSourceAckQueue
processor.VCBProcessor.outgoing.queue.error=errorLogQueue
processor.VCBProcessor.scriptName=VCBService

#------ PROCESSOR: VIETINProcessor
processor.VIETINProcessor.class=GProcessorRunner
processor.VIETINProcessor.incoming.queue=VietinServiceQueue
processor.VIETINProcessor.outgoing.queue1=wsPaymentSourceAckQueue
processor.VIETINProcessor.outgoing.queue.error=errorLogQueue
processor.VIETINProcessor.scriptName=VIETINService


#------ SOURCE: FilePollerSwiftSource
#
source.FilePollerSwiftSource.class=FilePollerSource
source.FilePollerSwiftSource.outgoing.queue1=sftpSwiftDestinationQueue
source.FilePollerSwiftSource.outgoing.queue.error=errorLogQueue
source.FilePollerSwiftSource.importRootDirectory=%{FLOW_DATA_DIR}/import/SWIFT
#source.FilePollerSource.fileExtension=.FIN
source.FilePollerSwiftSource.autoAck=true
source.FilePollerSwiftSource.withProperties=false
source.FilePollerSwiftSource.cleanFailedDirectoryOnStartup=false
source.FilePollerSwiftSource.cleanDoneDirectoryOnStartup=false
source.FilePollerSwiftSource.recurseImportDirectories=true
source.FilePollerSwiftSource.failedDirectory=false
source.FilePollerSwiftSource.sentDirectory=false

source.FilePollerBidvSource.class=FilePollerSource
source.FilePollerBidvSource.outgoing.queue1=sftpBidvDestinationQueue
source.FilePollerBidvSource.outgoing.queue.error=errorLogQueue
source.FilePollerBidvSource.importRootDirectory=%{FLOW_DATA_DIR}/import/BIDV
#source.FilePollerSource.fileExtension=.txt
source.FilePollerBidvSource.autoAck=true
source.FilePollerBidvSource.withProperties=false
source.FilePollerBidvSource.cleanFailedDirectoryOnStartup=false
source.FilePollerBidvSource.cleanDoneDirectoryOnStartup=false
source.FilePollerBidvSource.recurseImportDirectories=true
source.FilePollerBidvSource.failedDirectory=false
source.FilePollerBidvSource.sentDirectory=false

source.FilePollerVcbSource.class=FilePollerSource
source.FilePollerVcbSource.outgoing.queue1=sftpVcbDestinationQueue
source.FilePollerVcbSource.outgoing.queue.error=errorLogQueue
source.FilePollerVcbSource.importRootDirectory=%{FLOW_DATA_DIR}/import/VCB
#source.FilePollerSource.fileExtension=.txt
source.FilePollerVcbSource.autoAck=true
source.FilePollerVcbSource.withProperties=false
source.FilePollerVcbSource.cleanFailedDirectoryOnStartup=false
source.FilePollerVcbSource.cleanDoneDirectoryOnStartup=false
source.FilePollerVcbSource.recurseImportDirectories=true
source.FilePollerVcbSource.failedDirectory=false
source.FilePollerVcbSource.sentDirectory=false

source.FilePollerVietinSource.class=FilePollerSource
source.FilePollerVietinSource.outgoing.queue1=sftpVietinDestinationQueue
source.FilePollerVietinSource.outgoing.queue.error=errorLogQueue
source.FilePollerVietinSource.importRootDirectory=%{FLOW_DATA_DIR}/import/VIETIN
#source.FilePollerSource.fileExtension=.txt
source.FilePollerVietinSource.autoAck=true
source.FilePollerVietinSource.withProperties=false
source.FilePollerVietinSource.cleanFailedDirectoryOnStartup=false
source.FilePollerVietinSource.cleanDoneDirectoryOnStartup=false
source.FilePollerVietinSource.recurseImportDirectories=true
source.FilePollerVietinSource.failedDirectory=false
source.FilePollerVietinSource.sentDirectory=false


#
#----- DESTINATION: JSchSftpDestination
#
destination.SftpSwiftDestination.class=JSchSftpDestination
destination.SftpSwiftDestination.incoming.queue=sftpSwiftDestinationQueue
destination.SftpSwiftDestination.username=%{SFTP_USERNAME}
destination.SftpSwiftDestination.password=%{SFTP_PASSWORD[DECRYPT]}
destination.SftpSwiftDestination.remoteHost=%{SFTP_HOST}
destination.SftpSwiftDestination.validateFingerprint=%{VALIDATE_KNOWN_HOSTS}
destination.SftpSwiftDestination.remoteDirectoryPattern=%{SFTP_REMOTE_PATH}/${fileDir}
destination.SftpSwiftDestination.remotePort=%{SFTP_PORT}
destination.SftpSwiftDestination.remoteFilePattern=${fileName}
destination.SftpSwiftDestination.connectionCheckInterval=0
destination.SftpSwiftDestination.knownHostsFile=%{KNOWN_HOSTS_FILE}
destination.SftpSwiftDestination.maxAttempts=3
destination.SftpSwiftDestination.fileSystemPermissions=400
destination.SftpSwiftDestination.closeChannelAfterEachFile=false
destination.SftpSwiftDestination.allowChangeDirectory=false

destination.SftpBidvDestination.class=JSchSftpDestination
destination.SftpBidvDestination.incoming.queue=sftpBidvDestinationQueue
destination.SftpBidvDestination.username=%{BFTP_USERNAME}
destination.SftpBidvDestination.password=%{BFTP_PASSWORD[DECRYPT]}
destination.SftpBidvDestination.remoteHost=%{BFTP_HOST}
destination.SftpBidvDestination.validateFingerprint=%{VALIDATE_KNOWN_HOSTS}
destination.SftpBidvDestination.remoteDirectoryPattern=%{BFTP_REMOTE_PATH}/${fileDir}
destination.SftpBidvDestination.remotePort=%{BFTP_PORT}
destination.SftpBidvDestination.remoteFilePattern=${fileName}
destination.SftpBidvDestination.connectionCheckInterval=0
destination.SftpBidvDestination.knownHostsFile=%{KNOWN_HOSTS_FILE}
destination.SftpBidvDestination.maxAttempts=3
destination.SftpBidvDestination.fileSystemPermissions=400
destination.SftpBidvDestination.closeChannelAfterEachFile=false
destination.SftpBidvDestination.allowChangeDirectory=false

destination.SftpVcbDestination.class=JSchSftpDestination
destination.SftpVcbDestination.incoming.queue=sftpVcbDestinationQueue
destination.SftpVcbDestination.username=%{VFTP_USERNAME}
destination.SftpVcbDestination.password=%{VFTP_PASSWORD[DECRYPT]}
destination.SftpVcbDestination.remoteHost=%{VFTP_HOST}
destination.SftpVcbDestination.validateFingerprint=%{VALIDATE_KNOWN_HOSTS}
destination.SftpVcbDestination.remoteDirectoryPattern=%{VFTP_REMOTE_PATH}/${fileDir}
destination.SftpVcbDestination.remotePort=%{VFTP_PORT}
destination.SftpVcbDestination.remoteFilePattern=${fileName}
destination.SftpVcbDestination.connectionCheckInterval=0
destination.SftpVcbDestination.knownHostsFile=%{KNOWN_HOSTS_FILE}
destination.SftpVcbDestination.maxAttempts=3
destination.SftpVcbDestination.fileSystemPermissions=400
destination.SftpVcbDestination.closeChannelAfterEachFile=false
destination.SftpVcbDestination.allowChangeDirectory=false

destination.SftpVietinDestination.class=JSchSftpDestination
destination.SftpVietinDestination.incoming.queue=sftpVietinDestinationQueue
destination.SftpVietinDestination.username=%{VIFTP_USERNAME}
destination.SftpVietinDestination.password=%{VIFTP_PASSWORD[DECRYPT]}
destination.SftpVietinDestination.remoteHost=%{VIFTP_HOST}
destination.SftpVietinDestination.validateFingerprint=%{VALIDATE_KNOWN_HOSTS}
destination.SftpVietinDestination.remoteDirectoryPattern=%{VIFTP_REMOTE_PATH}/${fileDir}
destination.SftpVietinDestination.remotePort=%{VIFTP_PORT}
destination.SftpVietinDestination.remoteFilePattern=${fileName}
destination.SftpVietinDestination.connectionCheckInterval=0
destination.SftpVietinDestination.knownHostsFile=%{KNOWN_HOSTS_FILE}
destination.SftpVietinDestination.maxAttempts=3
destination.SftpVietinDestination.fileSystemPermissions=400
destination.SftpVietinDestination.closeChannelAfterEachFile=false
destination.SftpVietinDestination.allowChangeDirectory=false

#----- DESTINATION: ErrorLog
destination.ErrorLog.class=LoggerDestination
destination.ErrorLog.incoming.queue=errorLogQueue
destination.ErrorLog.ack.queue=wsPaymentSourceAckQueue
destination.ErrorLog.log.level=ERROR

# ------ SOURCE: SwiftMessageEventSource
# send an event to PersistDest for each message queued on one of the persistent queues
source.SwiftMessageEventSource.class=MessageEventSource
source.SwiftMessageEventSource.outgoing.queues.list=SwiftMessageEventLogQueue
source.SwiftMessageEventSource.copyAttributes=*
source.SwiftMessageEventSource.selectEvents=QUEUED,PROCESSED,FLOW_END
source.SwiftMessageEventSource.selectComponents=sftpSwiftDestinationQueue

# ------ SOURCE: BidvMessageEventSource
# send an event to PersistDest for each message queued on one of the persistent queues
source.BidvMessageEventSource.class=MessageEventSource
source.BidvMessageEventSource.outgoing.queues.list=BidvMessageEventLogQueue
source.BidvMessageEventSource.copyAttributes=*
source.BidvMessageEventSource.selectEvents=QUEUED,PROCESSED,FLOW_END
source.BidvMessageEventSource.selectComponents= sftpBidvDestinationQueue
	
# ------ SOURCE: VcbMessageEventSource
# send an event to PersistDest for each message queued on one of the persistent queues
source.VcbMessageEventSource.class=MessageEventSource
source.VcbMessageEventSource.outgoing.queues.list=VcbMessageEventLogQueue
source.VcbMessageEventSource.copyAttributes=*
source.VcbMessageEventSource.selectEvents=QUEUED,PROCESSED,FLOW_END
source.VcbMessageEventSource.selectComponents=	sftpVcbDestinationQueue

# ------ SOURCE: VietinMessageEventSource
# send an event to PersistDest for each message queued on one of the persistent queues
source.VietinMessageEventSource.class=MessageEventSource
source.VietinMessageEventSource.outgoing.queues.list=VietinMessageEventLogQueue
source.VietinMessageEventSource.copyAttributes=*
source.VietinMessageEventSource.selectEvents=QUEUED,PROCESSED,FLOW_END
source.VietinMessageEventSource.selectComponents=sftpVietinDestinationQueue

#------ PROCESSOR: SwiftMessageEventLog
processor.SwiftMessageEventLog.class=GProcessorRunner
processor.SwiftMessageEventLog.incoming.queue=SwiftMessageEventLogQueue
processor.SwiftMessageEventLog.outgoing.queue1=SwiftWriteMessageLogQueue
processor.SwiftMessageEventLog.outgoing.queue.error=errorLogQueue
processor.SwiftMessageEventLog.scriptName=FormatMessageEventLog

#------ PROCESSOR: BidvMessageEventLog
processor.BidvMessageEventLog.class=GProcessorRunner
processor.BidvMessageEventLog.incoming.queue=BidvMessageEventLogQueue
processor.BidvMessageEventLog.outgoing.queue1=BidvWriteMessageLogQueue
processor.BidvMessageEventLog.outgoing.queue.error=errorLogQueue
processor.BidvMessageEventLog.scriptName=FormatMessageEventLog

#------ PROCESSOR: VcbMessageEventLog
processor.VcbMessageEventLog.class=GProcessorRunner
processor.VcbMessageEventLog.incoming.queue=VcbMessageEventLogQueue
processor.VcbMessageEventLog.outgoing.queue1=VcbWriteMessageLogQueue
processor.VcbMessageEventLog.outgoing.queue.error=errorLogQueue
processor.VcbMessageEventLog.scriptName=FormatMessageEventLog

#------ PROCESSOR: VietinMessageEventLog
processor.VietinMessageEventLog.class=GProcessorRunner
processor.VietinMessageEventLog.incoming.queue=VietinMessageEventLogQueue
processor.VietinMessageEventLog.outgoing.queue1=VietinWriteMessageLogQueue
processor.VietinMessageEventLog.outgoing.queue.error=errorLogQueue
processor.VietinMessageEventLog.scriptName=FormatMessageEventLog

# ------ DESTINATION: SiwftWriteMessageLog
destination.SiwftWriteMessageLog.class=FileCsvDestination
destination.SiwftWriteMessageLog.incoming.queue=SwiftWriteMessageLogQueue
destination.SiwftWriteMessageLog.exportDirectory=%{FLOW_DATA_DIR}/queued-events
destination.SiwftWriteMessageLog.fileNamePattern=SwiftMessageLog.csv
destination.SiwftWriteMessageLog.lineSeparator=\n
destination.SiwftWriteMessageLog.fieldSeparator=\t
destination.SiwftWriteMessageLog.batchSize=150
destination.SiwftWriteMessageLog.batchIntervalSeconds=15
destination.SiwftWriteMessageLog.checkIntervalSeconds=1
destination.SiwftWriteMessageLog.batchIdProperty=BATCH.ID

# ------ DESTINATION: BidvWriteMessageLog
destination.BidvWriteMessageLog.class=FileCsvDestination
destination.BidvWriteMessageLog.incoming.queue=BidvWriteMessageLogQueue
destination.BidvWriteMessageLog.exportDirectory=%{FLOW_DATA_DIR}/queued-events
destination.BidvWriteMessageLog.fileNamePattern=BidvMessageLog.csv
destination.BidvWriteMessageLog.lineSeparator=\n
destination.BidvWriteMessageLog.fieldSeparator=\t
destination.BidvWriteMessageLog.batchSize=150
destination.BidvWriteMessageLog.batchIntervalSeconds=15
destination.BidvWriteMessageLog.checkIntervalSeconds=1
destination.BidvWriteMessageLog.batchIdProperty=BATCH.ID

# ------ DESTINATION: VcbWriteMessageLog
destination.VcbWriteMessageLog.class=FileCsvDestination
destination.VcbWriteMessageLog.incoming.queue=VcbWriteMessageLogQueue
destination.VcbWriteMessageLog.exportDirectory=%{FLOW_DATA_DIR}/queued-events
destination.VcbWriteMessageLog.fileNamePattern=VcbMessageLog.csv
destination.VcbWriteMessageLog.lineSeparator=\n
destination.VcbWriteMessageLog.fieldSeparator=\t
destination.VcbWriteMessageLog.batchSize=150
destination.VcbWriteMessageLog.batchIntervalSeconds=15
destination.VcbWriteMessageLog.checkIntervalSeconds=1
destination.VcbWriteMessageLog.batchIdProperty=BATCH.ID

# ------ DESTINATION: VietinWriteMessageLog
destination.VietinWriteMessageLog.class=FileCsvDestination
destination.VietinWriteMessageLog.incoming.queue=VietinWriteMessageLogQueue
destination.VietinWriteMessageLog.exportDirectory=%{FLOW_DATA_DIR}/queued-events
destination.VietinWriteMessageLog.fileNamePattern=VietinMessageLog.csv
destination.VietinWriteMessageLog.lineSeparator=\n
destination.VietinWriteMessageLog.fieldSeparator=\t
destination.VietinWriteMessageLog.batchSize=150
destination.VietinWriteMessageLog.batchIntervalSeconds=15
destination.VietinWriteMessageLog.checkIntervalSeconds=1
destination.VietinWriteMessageLog.batchIdProperty=BATCH.ID